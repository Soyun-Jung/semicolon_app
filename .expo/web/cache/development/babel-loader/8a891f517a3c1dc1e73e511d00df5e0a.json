{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\EMBEDED\\\\Final_Project\\\\semicolon_app\\\\components\\\\CommentPresenter.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components/native\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport PropTypes from \"prop-types\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport styles from \"../styles\";\nimport { FEED_QUERY } from \"../screens/home/Home\";\nimport { COMMENT_LIKE } from \"./Comments\";\nvar Touchable = styled.TouchableOpacity(_templateObject());\n\nvar CommentPresenter = function CommentPresenter(_ref) {\n  var commentId = _ref.commentId,\n      isCommented = _ref.isCommented;\n\n  var _useMutation = useMutation(COMMENT_LIKE, {\n    variables: {\n      commentId: commentId\n    },\n    refetchQueries: [{\n      query: FEED_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      CommentLikeMutation = _useMutation2[0];\n\n  var _useState = useState(isCommented),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var comparing = function comparing() {\n    CommentLikeMutation();\n\n    if (state === true) {\n      setState(false);\n    } else {\n      setState(true);\n    }\n  };\n\n  return React.createElement(Touchable, {\n    onPress: comparing,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }, React.createElement(AntDesign, {\n    size: 16,\n    color: state ? styles.starColor : styles.blackColor,\n    name: state ? \"star\" : \"staro\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }));\n};\n\nCommentPresenter.propTypes = {\n  isCommented: PropTypes.bool.isRequired,\n  commentId: PropTypes.string.isRequired\n};\nexport default CommentPresenter;","map":{"version":3,"sources":["D:/EMBEDED/Final_Project/semicolon_app/components/CommentPresenter.js"],"names":["React","useState","styled","AntDesign","PropTypes","useMutation","styles","FEED_QUERY","COMMENT_LIKE","Touchable","TouchableOpacity","CommentPresenter","commentId","isCommented","variables","refetchQueries","query","CommentLikeMutation","state","setState","comparing","starColor","blackColor","propTypes","bool","isRequired","string"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,QAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,MAAP;AACA,SAASC,UAAT;AACA,SAASC,YAAT;AAGA,IAAMC,SAAS,GAAGP,MAAM,CAACQ,gBAAV,mBAAf;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAgC;AAAA,MAA7BC,SAA6B,QAA7BA,SAA6B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,qBAEvBR,WAAW,CAACG,YAAD,EAAe;AACpDM,IAAAA,SAAS,EAAE;AAACF,MAAAA,SAAS,EAAEA;AAAZ,KADyC;AACjBG,IAAAA,cAAc,EAAE,CAAC;AAACC,MAAAA,KAAK,EAACT;AAAP,KAAD;AADC,GAAf,CAFY;AAAA;AAAA,MAE9CU,mBAF8C;;AAAA,kBAM3BhB,QAAQ,CAACY,WAAD,CANmB;AAAA;AAAA,MAM9CK,KAN8C;AAAA,MAMvCC,QANuC;;AAQrD,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBH,IAAAA,mBAAmB;;AACnB,QAAIC,KAAK,KAAK,IAAd,EAAoB;AAChBC,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,GAPD;;AAQA,SAAO,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,EAAjB;AAAqB,IAAA,KAAK,EAAEF,KAAK,GAAGZ,MAAM,CAACe,SAAV,GAAsBf,MAAM,CAACgB,UAA9D;AAA0E,IAAA,IAAI,EAAEJ,KAAK,GAAE,MAAF,GAAW,OAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CAAP;AAIH,CApBD;;AAuBAP,gBAAgB,CAACY,SAAjB,GAA6B;AACzBV,EAAAA,WAAW,EAACT,SAAS,CAACoB,IAAV,CAAeC,UADF;AAEzBb,EAAAA,SAAS,EAAER,SAAS,CAACsB,MAAV,CAAiBD;AAFH,CAA7B;AAKA,eAAed,gBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport { AntDesign} from \"@expo/vector-icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport styles from \"../styles\";\r\nimport { FEED_QUERY } from \"../screens/home/Home\";\r\nimport { COMMENT_LIKE } from \"./Comments\";\r\n\r\n\r\nconst Touchable = styled.TouchableOpacity`\r\n\r\n`;\r\n\r\nconst CommentPresenter = ({ commentId, isCommented }) => {\r\n\r\n    const [CommentLikeMutation] = useMutation(COMMENT_LIKE, {\r\n        variables: {commentId: commentId}, refetchQueries: [{query:FEED_QUERY}]\r\n    })\r\n\r\n    const [state, setState] = useState(isCommented);\r\n\r\n    const comparing = () => {\r\n        CommentLikeMutation();\r\n        if (state === true) {\r\n            setState(false);\r\n        } else {\r\n            setState(true);\r\n        }\r\n    }\r\n    return <Touchable onPress={comparing}>\r\n                <AntDesign size={16} color={state ? styles.starColor : styles.blackColor} name={state? \"star\" : \"staro\"}/>\r\n           </Touchable>\r\n    \r\n}\r\n\r\n\r\nCommentPresenter.propTypes = {\r\n    isCommented:PropTypes.bool.isRequired,\r\n    commentId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default CommentPresenter;"]},"metadata":{},"sourceType":"module"}