{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\EMBEDED\\\\Final_Project\\\\semicolon_app\\\\components\\\\Comments.js\";\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation deleteComment($id: String!) {\\n    deleteComment(id: $id) \\n  }\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation commentLikes($commentId: String!) {\\n    commentLikes(commentId: $commentId)\\n  }\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation addComment($postId: String!, $text: String!) {\\n    addComment(postId: $postId, text: $text) {\\n      id\\n      text\\n      user {\\n        username\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    \\n    width: 100%;\\n    flexDirection: row;\\n    alignItems: center;\\n    padding: 7px;\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  \\n    flexDirection: row;\\n    alignSelf: flex-end;\\n    position:absolute;\\n    left:360\\n    bottom:13\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    width: 100%;\\n    flexDirection: row;\\n    alignItems: center;\\n    padding: 7px;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  font-weight: 300;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  font-weight: 700;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-left: 10px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding: 15px;\\n  flex-direction: row;\\n  align-items: center;\\n  background:white;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 15px;\\n  flex:1;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport styled from \"styled-components/native\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport PropTypes from \"prop-types\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { withNavigation } from \"react-navigation\";\nimport styles from \"../styles\";\nimport useInput from \"../hooks/useInput\";\nimport CommentPresenter from \"./CommentPresenter\";\nimport { FEED_QUERY } from \"../screens/home/Home\";\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nimport CommentDelete from \"./CommentDelete\";\nvar Container = styled.View(_templateObject());\nvar Header = styled.View(_templateObject2());\nvar Touchable = styled.TouchableOpacity(_templateObject3());\nvar HeaderUserContainer = styled.View(_templateObject4());\nvar Bold = styled.Text(_templateObject5());\nvar Text = styled.Text(_templateObject6());\nvar Caption = styled.Text(_templateObject7());\nvar Div = styled.View(_templateObject8());\nvar Div2 = styled.View(_templateObject9());\nvar Div3 = styled.View(_templateObject10());\nvar ADD_COMMENT = gql(_templateObject11());\nexport var COMMENT_LIKE = gql(_templateObject12());\nexport var DELETE_COMMENT = gql(_templateObject13());\n\nvar Comments = function Comments(_ref) {\n  var id = _ref.id,\n      user = _ref.user,\n      caption = _ref.caption,\n      _ref$comments = _ref.comments,\n      comments = _ref$comments === void 0 ? [] : _ref$comments,\n      navigation = _ref.navigation,\n      commentId = _ref.commentId;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selfComments = _useState2[0],\n      setSelfComments = _useState2[1];\n\n  var commentInput = useInput(\"\");\n\n  var _useMutation = useMutation(ADD_COMMENT, {\n    variables: {\n      postId: id,\n      text: commentInput.value\n    },\n    refetchQueries: [{\n      query: FEED_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addCommentMutation = _useMutation2[0];\n\n  console.log(comments.id, id);\n\n  var submitComment = function submitComment() {\n    var _await$addCommentMuta, addComment;\n\n    return _regeneratorRuntime.async(function submitComment$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(addCommentMutation());\n\n          case 3:\n            _await$addCommentMuta = _context.sent;\n            addComment = _await$addCommentMuta.data.addComment;\n            setSelfComments([].concat(_toConsumableArray(selfComments), [addComment]));\n            commentInput.setValue(\"\");\n            Keyboard.dismiss();\n            _context.next = 12;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, React.createElement(Touchable, {\n    onPress: function onPress() {\n      return navigation.navigate(\"UserDetail\", {\n        username: user.username\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 30,\n      width: 30,\n      borderRadius: 15\n    },\n    source: {\n      uri: user.avatar\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  })), React.createElement(Touchable, {\n    onPress: function onPress() {\n      return navigation.navigate(\"UserDetail\", {\n        username: user.username\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, React.createElement(HeaderUserContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, React.createElement(Caption, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(Bold, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, user.username), \" \", caption)))), React.createElement(KeyboardAwareScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      flex: 1,\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, comments.map(function (comment) {\n    return React.createElement(Swipeable, {\n      renderRightActions: function renderRightActions() {\n        return React.createElement(CommentDelete, {\n          id: comment.id,\n          comments: comments,\n          setSelfComments: setSelfComments,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 46\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, React.createElement(Touchable, {\n      onPress: function onPress() {\n        return navigation.navigate(\"UserDetail\", {\n          username: comment.user.username\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, React.createElement(Div, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      style: {\n        height: 30,\n        width: 30,\n        borderRadius: 15\n      },\n      source: {\n        uri: comment.user.avatar\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }), React.createElement(Bold, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, comment.user.username), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, \" \", comment.text), React.createElement(Div2, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, React.createElement(CommentPresenter, {\n      commentId: comment.id,\n      isCommented: comment.isCommented,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    })))));\n  }), React.createElement(Div3, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    value: commentInput.value,\n    onChangeText: commentInput.onChange,\n    placeholder: \"  댓글 달기...\",\n    style: {\n      marginLeft: 3,\n      height: 50,\n      backgroundColor: \"white\",\n      width: \"87%\",\n      borderRadius: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return submitComment();\n    },\n    style: {\n      width: 50,\n      left: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: styles.blueColor\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 94\n    }\n  }, \"\\uAC8C\\uC2DC\"))))));\n};\n\nComments.propTypes = {\n  id: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    username: PropTypes.string.isRequired\n  }).isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    user: PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      username: PropTypes.string.isRequired\n    }).isRequired\n  })).isRequired,\n  caption: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  createdAt: PropTypes.string.isRequired\n};\nexport default withNavigation(Comments);","map":{"version":3,"sources":["D:/EMBEDED/Final_Project/semicolon_app/components/Comments.js"],"names":["React","useState","styled","KeyboardAwareScrollView","TouchableOpacity","PropTypes","gql","useMutation","withNavigation","styles","useInput","CommentPresenter","FEED_QUERY","Swipeable","CommentDelete","Container","View","Header","Touchable","HeaderUserContainer","Bold","Text","Caption","Div","Div2","Div3","ADD_COMMENT","COMMENT_LIKE","DELETE_COMMENT","Comments","id","user","caption","comments","navigation","commentId","selfComments","setSelfComments","commentInput","variables","postId","text","value","refetchQueries","query","addCommentMutation","console","log","submitComment","addComment","data","setValue","Keyboard","dismiss","navigate","username","height","width","borderRadius","uri","avatar","flex","padding","map","comment","isCommented","onChange","marginLeft","backgroundColor","left","color","blueColor","propTypes","string","isRequired","shape","arrayOf","location","createdAt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Image, TextInput, ScrollView } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport PropTypes from \"prop-types\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { withNavigation } from \"react-navigation\";\r\nimport styles from \"../styles\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport CommentPresenter from \"./CommentPresenter\";\r\nimport { FEED_QUERY } from \"../screens/home/Home\";\r\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\r\nimport CommentDelete from './CommentDelete'\r\n\r\n\r\nconst Container = styled.View`\r\n  margin-bottom: 15px;\r\n  flex:1;\r\n`;\r\nconst Header = styled.View`\r\n  padding: 15px;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  background:white;\r\n`;\r\nconst Touchable = styled.TouchableOpacity``;\r\n\r\nconst HeaderUserContainer = styled.View`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Bold = styled.Text`\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  font-weight: 300;\r\n`;\r\n\r\nconst Caption = styled.Text`\r\n`;\r\nconst Div = styled.View`\r\n    width: 100%;\r\n    flexDirection: row;\r\n    alignItems: center;\r\n    padding: 7px;\r\n`;\r\n    // \r\n    // borderBottomWidth:0.6;\r\nconst Div2 = styled.View`\r\n  \r\n    flexDirection: row;\r\n    alignSelf: flex-end;\r\n    position:absolute;\r\n    left:360\r\n    bottom:13\r\n`\r\nconst Div3 = styled.View`\r\n    \r\n    width: 100%;\r\n    flexDirection: row;\r\n    alignItems: center;\r\n    padding: 7px;\r\n`;\r\n\r\nconst ADD_COMMENT = gql`\r\n  mutation addComment($postId: String!, $text: String!) {\r\n    addComment(postId: $postId, text: $text) {\r\n      id\r\n      text\r\n      user {\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\nexport const COMMENT_LIKE = gql`\r\n  mutation commentLikes($commentId: String!) {\r\n    commentLikes(commentId: $commentId)\r\n  }\r\n`;\r\n\r\nexport const DELETE_COMMENT = gql`\r\n  mutation deleteComment($id: String!) {\r\n    deleteComment(id: $id) \r\n  }\r\n`;\r\n\r\n\r\n\r\nconst Comments = ({\r\n  id,\r\n  user,\r\n  caption,\r\n  comments = [],\r\n  navigation,\r\n  commentId\r\n}) => {\r\n  const [selfComments, setSelfComments] = useState();\r\n  // const [isCommenting, setIsCommenting] = useState(false);\r\n  const commentInput = useInput(\"\");\r\n  const [addCommentMutation] = useMutation(ADD_COMMENT, {\r\n    variables: { postId: id, text: commentInput.value }, refetchQueries: [{query:FEED_QUERY}]\r\n  });\r\n  console.log(comments.id, id)\r\n\r\n  const submitComment = async () => {\r\n    // if (commentInput.value !== \"\" && isCommenting === false) {\r\n    //   setIsCommenting(true);\r\n    // // }\r\n    // const { which } = event;\r\n    // if (which === 13) {\r\n    //   event.preventDefault();\r\n      try {\r\n        const {\r\n          data: { addComment }\r\n        } = await addCommentMutation();\r\n        setSelfComments([...selfComments, addComment]);\r\n        commentInput.setValue(\"\");\r\n        Keyboard.dismiss();\r\n      } catch {\r\n      } \r\n    }\r\n  ;\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Touchable\r\n          onPress={() => navigation.navigate(\"UserDetail\", { username: user.username })}>\r\n          <Image\r\n            style={{ height: 30, width: 30, borderRadius: 15 }}\r\n            source={{ uri: user.avatar }}\r\n          />\r\n        </Touchable>\r\n        <Touchable onPress={() => navigation.navigate(\"UserDetail\", { username: user.username })}>\r\n          <HeaderUserContainer>\r\n        <Caption>\r\n          <Bold>{user.username}</Bold> {caption}\r\n        </Caption>\r\n          </HeaderUserContainer>\r\n        </Touchable>\r\n      </Header>\r\n\r\n      <KeyboardAwareScrollView  >\r\n        \r\n      <ScrollView style={{flex: 1, padding:10}} >\r\n          \r\n          {comments.map(comment => (\r\n        <Swipeable renderRightActions={() => <CommentDelete id={comment.id} comments={comments} setSelfComments={setSelfComments}  />}>\r\n        <Touchable onPress={() => navigation.navigate(\"UserDetail\", { username: comment.user.username })}>\r\n          <Div>\r\n               \r\n            <Image\r\n              style={{ height: 30, width: 30, borderRadius: 15 }}\r\n              source={{ uri: comment.user.avatar }}\r\n            />\r\n            <Bold>{comment.user.username}</Bold>  \r\n                  <Text> {comment.text}</Text>\r\n            <Div2>\r\n            <CommentPresenter commentId={comment.id} isCommented={comment.isCommented } />\r\n           </Div2>\r\n          </Div>          \r\n        </Touchable>\r\n        </Swipeable>\r\n            \r\n          ))}\r\n         \r\n          <Div3>\r\n            <TextInput\r\n            value={commentInput.value}\r\n            onChangeText={commentInput.onChange}\r\n            placeholder={\"  댓글 달기...\"}\r\n                 \r\n              style={{      \r\n              marginLeft: 3,\r\n              height: 50,\r\n              backgroundColor: \"white\",\r\n              width: \"87%\",\r\n              borderRadius: 15,\r\n              }}\r\n              \r\n              />\r\n              <TouchableOpacity onPress={() => submitComment()} style={{width: 50, left:15}}><Text style={{color: styles.blueColor}}>게시</Text></TouchableOpacity>\r\n            </Div3>\r\n\r\n          </ScrollView>\r\n      </KeyboardAwareScrollView>\r\n      {/* </KeyboardAvoidingView> */}\r\n      </Container>\r\n        \r\n  )\r\n};\r\n\r\nComments.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n    username: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      user: PropTypes.shape({\r\n        avatar:PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n        username: PropTypes.string.isRequired\r\n      }).isRequired\r\n    })\r\n  ).isRequired,\r\n  caption: PropTypes.string.isRequired,\r\n  location: PropTypes.string,\r\n  createdAt: PropTypes.string.isRequired\r\n};\r\n\r\nexport default withNavigation(Comments);"]},"metadata":{},"sourceType":"module"}