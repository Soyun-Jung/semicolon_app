{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\EMBEDED\\\\Final_Project\\\\semicolon_app\\\\components\\\\CommentDelete.js\";\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FEED_QUERY } from \"../screens/home/Home\";\nimport { DELETE_COMMENT } from \"./Comments\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport PropTypes from \"prop-types\";\nimport { EvilIcons } from \"@expo/vector-icons\";\n\nvar CommentDelete = function CommentDelete(_ref) {\n  var setSelfComments = _ref.setSelfComments,\n      comments = _ref.comments,\n      id = _ref.id;\n  console.log(setSelfComments, comments, id);\n\n  var _useMutation = useMutation(DELETE_COMMENT, {\n    variables: {\n      id: id\n    },\n    refetchQueries: [{\n      query: FEED_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      removeCommentMutation = _useMutation2[0];\n\n  var delComment = function delComment() {\n    return _regeneratorRuntime.async(function delComment$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(removeCommentMutation());\n\n          case 2:\n            setSelfComments(_toConsumableArray(comments).filter(function (comment) {\n              return comment.id !== id;\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      delComment();\n    },\n    activeOpacity: 0.8,\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(EvilIcons, {\n    size: 30,\n    name: \"trash\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  button: {\n    width: 40,\n    height: 40,\n    backgroundColor: '#FE5746',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    color: '#FFFFFF'\n  }\n});\nCommentDelete.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    user: PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      username: PropTypes.string.isRequired\n    }).isRequired\n  }))\n};\nexport default CommentDelete;","map":{"version":3,"sources":["D:/EMBEDED/Final_Project/semicolon_app/components/CommentDelete.js"],"names":["React","FEED_QUERY","DELETE_COMMENT","useMutation","PropTypes","EvilIcons","CommentDelete","setSelfComments","comments","id","console","log","variables","refetchQueries","query","removeCommentMutation","delComment","filter","comment","styles","button","StyleSheet","create","width","height","backgroundColor","justifyContent","alignItems","text","color","propTypes","arrayOf","shape","string","isRequired","user","avatar","username"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,UAAT;AACA,SAASC,cAAT;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAuC;AAAA,MAApCC,eAAoC,QAApCA,eAAoC;AAAA,MAAnBC,QAAmB,QAAnBA,QAAmB;AAAA,MAATC,EAAS,QAATA,EAAS;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ,EAA6BC,QAA7B,EAAuCC,EAAvC;;AADyD,qBAEzBN,WAAW,CAACD,cAAD,EAAiB;AAC5DU,IAAAA,SAAS,EAAE;AAAEH,MAAAA,EAAE,EAAFA;AAAF,KADiD;AACzCI,IAAAA,cAAc,EAAE,CAAC;AAACC,MAAAA,KAAK,EAACb;AAAP,KAAD;AADyB,GAAjB,CAFc;AAAA;AAAA,MAElDc,qBAFkD;;AAMzD,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACbD,qBAAqB,EADR;;AAAA;AAEnBR,YAAAA,eAAe,CAAC,mBAAIC,QAAJ,EAAcS,MAAd,CAAqB,UAAAC,OAAO;AAAA,qBAAIA,OAAO,CAACT,EAAR,KAAeA,EAAnB;AAAA,aAA5B,CAAD,CAAf;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAIA,SACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,mBAAM;AAAEO,MAAAA,UAAU;AAAI,KAAjD;AACI,IAAA,aAAa,EAAE,GADnB;AAEI,IAAA,KAAK,EAAEG,MAAM,CAACC,MAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKA,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,EAAjB;AAAqB,IAAA,IAAI,EAAE,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CADJ;AAUH,CApBD;;AAsBA,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,MAAM,EAAE;AACJG,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,eAAe,EAAE,SAHb;AAIJC,IAAAA,cAAc,EAAE,QAJZ;AAKJC,IAAAA,UAAU,EAAE;AALR,GADqB;AAQ7BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL;AARuB,CAAlB,CAAf;AAaAvB,aAAa,CAACwB,SAAd,GAA0B;AAExBtB,EAAAA,QAAQ,EAAEJ,SAAS,CAAC2B,OAAV,CACR3B,SAAS,CAAC4B,KAAV,CAAgB;AACdvB,IAAAA,EAAE,EAAEL,SAAS,CAAC6B,MAAV,CAAiBC,UADP;AAEdN,IAAAA,IAAI,EAAExB,SAAS,CAAC6B,MAAV,CAAiBC,UAFT;AAGdC,IAAAA,IAAI,EAAE/B,SAAS,CAAC4B,KAAV,CAAgB;AACpBI,MAAAA,MAAM,EAAChC,SAAS,CAAC6B,MAAV,CAAiBC,UADJ;AAEpBzB,MAAAA,EAAE,EAAEL,SAAS,CAAC6B,MAAV,CAAiBC,UAFD;AAGpBG,MAAAA,QAAQ,EAAEjC,SAAS,CAAC6B,MAAV,CAAiBC;AAHP,KAAhB,EAIHA;AAPW,GAAhB,CADQ;AAFc,CAA1B;AAgBA,eAAe5B,aAAf","sourcesContent":["import React from 'react'\r\nimport {TouchableOpacity,Text,StyleSheet} from 'react-native'\r\nimport { FEED_QUERY } from \"../screens/home/Home\";\r\nimport { DELETE_COMMENT } from \"./Comments\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport PropTypes from \"prop-types\";\r\nimport { EvilIcons } from \"@expo/vector-icons\";\r\n\r\nconst CommentDelete = ({ setSelfComments, comments, id }) => {\r\n    console.log(setSelfComments, comments, id)\r\n    const [removeCommentMutation] = useMutation(DELETE_COMMENT, {\r\n    variables: { id }, refetchQueries: [{query:FEED_QUERY}]\r\n    });\r\n\r\n    const delComment = async () => {\r\n    await removeCommentMutation();\r\n    setSelfComments([...comments].filter(comment => comment.id !== id))\r\n    } \r\n    return (\r\n        <TouchableOpacity onPress={() => { delComment() }}\r\n            activeOpacity={0.8}\r\n            style={styles.button}\r\n        >\r\n           \r\n        <EvilIcons size={30} name={\"trash\"}/>\r\n         \r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        width: 40,\r\n        height: 40,\r\n        backgroundColor: '#FE5746',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    text: {\r\n        color: '#FFFFFF'\r\n    }\r\n})\r\n\r\nCommentDelete.propTypes = {\r\n\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      user: PropTypes.shape({\r\n        avatar:PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n        username: PropTypes.string.isRequired\r\n      }).isRequired\r\n    })\r\n  )\r\n};\r\n\r\n\r\nexport default CommentDelete;"]},"metadata":{},"sourceType":"module"}