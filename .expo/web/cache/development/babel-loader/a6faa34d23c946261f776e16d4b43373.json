{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\EMBEDED\\\\Final_Project\\\\semicolon_app\\\\screens\\\\story\\\\UploadStory.js\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  color: white;\\n  font-weight: 600;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \";\\n  padding: 10px;\\n  border-radius: 4px;\\n  align-items: center;\\n  justify-content: center;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 10px;\\n  border: 0px solid \", \";\\n  border-bottom-width: 1px;\\n  padding-bottom: 10px;\\n  width: \", \";\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  justify-content: flex-start;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding: 20px;\\n  flex-direction: row;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation uploadStory($caption: String, $files: [String!]!, $tagUser: [String!]) {\\n    uploadStory(caption: $caption, files: $files, tagUser: $tagUser) {\\n      id\\n      caption\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport styled from \"styled-components/native\";\nimport useInput from \"../../hooks/useInput\";\nimport styles from \"../../styles\";\nimport constants from \"../../Constants\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { FEED_QUERY } from \"../home/Home\";\nimport { ME } from \"../tabs/Profile\";\nvar UPLOADSTORY = gql(_templateObject());\nvar View = styled.View(_templateObject2());\nvar Container = styled.View(_templateObject3());\nvar Form = styled.View(_templateObject4());\nvar STextInput = styled.TextInput(_templateObject5(), styles.lightGreyColor, constants.width - 180);\nvar Button = styled.TouchableOpacity(_templateObject6(), function (props) {\n  return props.theme.blueColor;\n});\nvar Text = styled.Text(_templateObject7());\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var photo = navigation.getParam(\"photo\");\n  var story = navigation.getParam(\"story\");\n  var uri = navigation.getParam(\"uri\");\n  var captionInput = useInput();\n  var tagUserInput = useInput();\n\n  var _useMutation = useMutation(UPLOADSTORY, {\n    refetchQueries: function refetchQueries() {\n      return [{\n        query: FEED_QUERY\n      }, {\n        query: ME\n      }];\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      uploadMutation = _useMutation2[0];\n\n  var imageType;\n  var uploadUri;\n  var imgUri;\n  var name;\n  var tagUsers;\n\n  if (navigation.getParam(\"photo\")) {\n    imgUri = photo.uri;\n    name = photo.filename;\n\n    var _name$split = name.split(\".\"),\n        _name$split2 = _slicedToArray(_name$split, 2),\n        type = _name$split2[1];\n\n    uploadUri = photo.uri;\n    imageType = Platform.os === \"ios\" ? type.toLowerCase() : \"image/jpeg\";\n  } else if (navigation.getParam(\"story\")) {\n    imgUri = story.uri;\n    name = story.filename;\n    uploadUri = uri;\n    imageType = \"mp4\";\n  }\n\n  var handleSubmit = function handleSubmit() {\n    var formData, _await$axios$post, location;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            formData = new FormData();\n            formData.append(\"file\", {\n              name: name,\n              type: imageType,\n              uri: uploadUri\n            });\n            _context.prev = 2;\n            setIsLoading(true);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.post(\"https://semicolon-backend.herokuapp.com/api/upload\", formData, {\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            }));\n\n          case 6:\n            _await$axios$post = _context.sent;\n            location = _await$axios$post.data.location;\n            console.log(location);\n\n            if (tagUserInput.value) {\n              tagUsers = tagUserInput.value.split(\" \");\n            } else {\n              tagUsers = \"\";\n            }\n\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(uploadMutation({\n              variables: {\n                files: [location],\n                caption: captionInput.value,\n                tagUser: tagUsers\n              }\n            }));\n\n          case 12:\n            navigation.navigate(\"TabNavigation\");\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(\"ÏóêÎü¨ \" + _context.t0);\n            Alert.alert(\"ÏóÖÎ°úÎìú Ïã§Ìå®\", \"Îã§Ïãú ÏãúÎèÑÌï¥ Ï£ºÏÑ∏Ïöî ü§î\");\n\n          case 19:\n            _context.prev = 19;\n            setIsLoading(false);\n            return _context.finish(19);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 15, 19, 22]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: imgUri\n    },\n    style: {\n      height: 80,\n      width: 80,\n      marginRight: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }), React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, React.createElement(STextInput, {\n    onChangeText: captionInput.onChange,\n    value: captionInput.value,\n    placeholder: \"\\uAE00 \\uB0B4\\uC6A9\",\n    multiline: true,\n    placeholderTextColor: styles.darkGreyColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }), React.createElement(STextInput, {\n    onChangeText: tagUserInput.onChange,\n    value: tagUserInput.value,\n    placeholder: \"\\uD0DC\\uADF8\\uD560 \\uC0AC\\uB78C\",\n    multiline: true,\n    placeholderTextColor: styles.darkGreyColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    onPress: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, loading ? React.createElement(ActivityIndicator, {\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"\\uC5C5\\uB85C\\uB4DC \")))));\n});","map":{"version":3,"sources":["D:/EMBEDED/Final_Project/semicolon_app/screens/story/UploadStory.js"],"names":["React","useState","axios","styled","useInput","styles","constants","gql","useMutation","FEED_QUERY","ME","UPLOADSTORY","View","Container","Form","STextInput","TextInput","lightGreyColor","width","Button","TouchableOpacity","props","theme","blueColor","Text","navigation","loading","setIsLoading","photo","getParam","story","uri","captionInput","tagUserInput","refetchQueries","query","uploadMutation","imageType","uploadUri","imgUri","name","tagUsers","filename","split","type","Platform","os","toLowerCase","handleSubmit","formData","FormData","append","post","headers","location","data","console","log","value","variables","files","caption","tagUser","navigate","Alert","alert","height","marginRight","onChange","darkGreyColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Image, ActivityIndicator, Alert, Platform } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport styles from \"../../styles\";\r\nimport constants from \"../../Constants\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { FEED_QUERY } from \"../home/Home\";\r\nimport { ME } from \"../tabs/Profile\";\r\n\r\nconst UPLOADSTORY = gql`\r\n  mutation uploadStory($caption: String, $files: [String!]!, $tagUser: [String!]) {\r\n    uploadStory(caption: $caption, files: $files, tagUser: $tagUser) {\r\n      id\r\n      caption\r\n    }\r\n  }\r\n`;\r\n\r\nconst View = styled.View`\r\n  flex: 1;\r\n`;\r\n\r\nconst Container = styled.View`\r\n  padding: 20px;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Form = styled.View`\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst STextInput = styled.TextInput`\r\n  margin-bottom: 10px;\r\n  border: 0px solid ${styles.lightGreyColor};\r\n  border-bottom-width: 1px;\r\n  padding-bottom: 10px;\r\n  width: ${constants.width - 180};\r\n`;\r\n\r\nconst Button = styled.TouchableOpacity`\r\n  background-color: ${props => props.theme.blueColor};\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n// const Button = styled.TouchableOpacity`\r\n//   background-color: ${props => props.theme.blueColor};\r\n//   padding: 10px;\r\n//   border-radius: 4px;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n// `;\r\n\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default ({ navigation }) => {\r\n  const [loading, setIsLoading] = useState(false);\r\n  const photo = navigation.getParam(\"photo\");\r\n  const story = navigation.getParam(\"story\");\r\n  const uri = navigation.getParam(\"uri\");\r\n\r\n  const captionInput = useInput();\r\n  const tagUserInput = useInput();\r\n\r\n  const [uploadMutation] = useMutation(UPLOADSTORY, {\r\n    refetchQueries: () => [{ query: FEED_QUERY }, { query: ME }]\r\n  });\r\n\r\n  let imageType // ÏÇ¨ÏßÑÏù∏ÏßÄ ÎπÑÎîîÏò§Ïù∏ÏßÄ Ï†ïÌïòÎäî Î≥ÄÏàò\r\n  let uploadUri // ÎπÑÎîîÏò§Îäî ÏÇ¨ÏßÑÍ≥º Í∞ÄÏ†∏Ïò§Îäî uriÍ∞Ä Îã¨ÎùºÏÑú Íµ¨Î∂ÑÌï¥ Ï§òÏïºÌï®.\r\n  let imgUri // ÏõêÏïàÏóê Îì§Ïñ¥Í∞àÎïå Îú®Îäî ÏÇ¨ÏßÑ\r\n  let name // ÌååÏùºÎ™Ö\r\n  let tagUsers // ÌÉúÍ∑∏Ìï† ÏÇ¨ÎûåÎì§ ÎÑ£ÏùÑ Î≥ÄÏàò\r\n\r\n  if (navigation.getParam(\"photo\")) {\r\n    imgUri = photo.uri\r\n    name = photo.filename;\r\n    const [, type] = name.split(\".\");\r\n    uploadUri = photo.uri\r\n    imageType = Platform.os === \"ios\" ? type.toLowerCase() : \"image/jpeg\";\r\n  } else if (navigation.getParam(\"story\")) {\r\n    imgUri = story.uri\r\n    name = story.filename;\r\n    uploadUri = uri\r\n    imageType = \"mp4\";\r\n  }\r\n  const handleSubmit = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", {\r\n      name,\r\n      type: imageType,\r\n      uri: uploadUri,\r\n    });\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      const { data: { location } } = await axios.post(\"https://semicolon-backend.herokuapp.com/api/upload\", formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data', }\r\n      });\r\n      console.log(location);\r\n\r\n      //console.log(tagUserInput.value);\r\n\r\n      // if (tagUserInput.value != \"\" || tagUserInput.value != \"undefined\" ) {\r\n      //   tagUsers = tagUserInput.value.split(\" \");\r\n      // }\r\n\r\n      if (tagUserInput.value) {\r\n         tagUsers = tagUserInput.value.split(\" \");\r\n      }\r\n      else {\r\n        tagUsers = \"\";\r\n      }\r\n\r\n      await uploadMutation({\r\n        variables: {\r\n          files: [location],\r\n          caption: captionInput.value,\r\n          tagUser: tagUsers\r\n        }\r\n      });\r\n\r\n      navigation.navigate(\"TabNavigation\");\r\n\r\n    } catch (e) {\r\n      console.log(\"ÏóêÎü¨ \" + e);\r\n      Alert.alert(\"ÏóÖÎ°úÎìú Ïã§Ìå®\", \"Îã§Ïãú ÏãúÎèÑÌï¥ Ï£ºÏÑ∏Ïöî ü§î\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n\r\n  };\r\n  return (\r\n    <View>\r\n      <Container>\r\n        <Image\r\n          source={{ uri: imgUri }}\r\n          style={{ height: 80, width: 80, marginRight: 30 }}\r\n        />\r\n        <Form>\r\n          <STextInput\r\n            onChangeText={captionInput.onChange}\r\n            value={captionInput.value}\r\n            placeholder=\"Í∏Ä ÎÇ¥Ïö©\"\r\n            multiline={true}\r\n            placeholderTextColor={styles.darkGreyColor}\r\n          />\r\n          <STextInput\r\n            onChangeText={tagUserInput.onChange}\r\n            value={tagUserInput.value}\r\n            placeholder=\"ÌÉúÍ∑∏Ìï† ÏÇ¨Îûå\"\r\n            multiline={true}\r\n            placeholderTextColor={styles.darkGreyColor}\r\n          />\r\n          <Button onPress={handleSubmit}>\r\n            {loading ? (\r\n              <ActivityIndicator color=\"white\" />\r\n            ) : (\r\n                <Text>ÏóÖÎ°úÎìú </Text>\r\n              )}\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    </View>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}