{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\EMBEDED\\\\Final_Project\\\\semicolon_app\\\\screens\\\\story\\\\StoryDetail.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    background-color:white;\\n    justifyContent: center\\n    align-items: center\\n    height: 40px\\n    width:100px\\n    margin-right:5px\\n    margin-left:5px\\n    border-radius:5px\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\nquery getStories($id: String!)  {\\n    getStories(id: $id) {\\n     ...StoryParts\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation hideStory(\\n    $id : String!,\\n  ) { hideStory(\\n    id: $id,\\n    ) \\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from 'react-native-modal';\nimport { useMutation, useQuery } from 'react-apollo-hooks';\nimport { gql } from \"apollo-boost\";\nimport { FEED_QUERY } from \"../home/Home\";\nimport constants from \"../../Constants\";\nimport { STORY_FRAGMENT } from \"../../Fragments\";\nimport styled from 'styled-components';\nimport { Video } from 'expo-av';\nvar HIDE_STORY = gql(_templateObject());\nvar GETSTORY_QUERY = gql(_templateObject2(), STORY_FRAGMENT);\nvar InputButton = styled.TouchableOpacity(_templateObject3());\nexport default (function (_ref) {\n  var id = _ref.id,\n      visibles = _ref.visibles,\n      setModalUp = _ref.setModalUp;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      menu = _useState2[0],\n      setMenu = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useMutation = useMutation(HIDE_STORY, {\n    variables: {\n      id: id\n    },\n    refetchQueries: [{\n      query: FEED_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      hideStoryMutation = _useMutation2[0];\n\n  var _useQuery = useQuery(GETSTORY_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      Sloading = _useQuery.loading;\n\n  console.log(data);\n\n  var hideStory = function hideStory() {\n    return _regeneratorRuntime.async(function hideStory$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(hideStoryMutation());\n\n          case 3:\n            setLoading(false);\n            setModalVisible(!isModalVisible);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return !Sloading ? React.createElement(React.Fragment, null, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return setModalUp(!visibles);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, React.createElement(Modal, {\n    visible: visibles,\n    animationType: \"slide\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 10,\n      width: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  })))), React.createElement(Modal, {\n    visible: menu,\n    animationType: \"slide\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      marginBottom: 10,\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, React.createElement(InputButton, {\n    onPress: hideStory,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, loading ? React.createElement(ActivityIndicator, {\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 48\n    }\n  }) : React.createElement(Text, {\n    style: {\n      color: \"black\",\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 43\n    }\n  }, \"\\uC228\\uAE30\\uAE30\")), React.createElement(InputButton, {\n    onPress: function onPress() {\n      setMenu(!menu);\n      setModalVisible(!isModalVisible);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, loading ? React.createElement(ActivityIndicator, {\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 48\n    }\n  }) : React.createElement(Text, {\n    style: {\n      color: \"black\",\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 43\n    }\n  }, \"\\uCDE8\\uC18C\")))))) : null;\n});\nvar styles = StyleSheet.create({\n  modalView: {\n    marginLeft: -constants.width / 7,\n    width: constants.width * 1.2,\n    height: constants.height,\n    backgroundColor: \"rgba(0,0,0,0.7)\",\n    alignItems: \"center\",\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["D:/EMBEDED/Final_Project/semicolon_app/screens/story/StoryDetail.js"],"names":["React","useState","Modal","useMutation","useQuery","gql","FEED_QUERY","constants","STORY_FRAGMENT","styled","Video","HIDE_STORY","GETSTORY_QUERY","InputButton","TouchableOpacity","id","visibles","setModalUp","menu","setMenu","loading","setLoading","variables","refetchQueries","query","hideStoryMutation","data","Sloading","console","log","hideStory","setModalVisible","isModalVisible","styles","modalView","marginBottom","width","flexDirection","color","fontWeight","StyleSheet","create","marginLeft","height","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,oBAAtC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,UAAT;AACA,OAAOC,SAAP;AACA,SAASC,cAAT;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,IAAMC,UAAU,GAAGN,GAAH,mBAAhB;AASA,IAAMO,cAAc,GAAGP,GAAH,qBAMhBG,cANgB,CAApB;AASA,IAAMK,WAAW,GAAGJ,MAAM,CAACK,gBAAV,oBAAjB;AAWA,gBAAe,gBAAkC;AAAA,MAA/BC,EAA+B,QAA/BA,EAA+B;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBAErBhB,QAAQ,CAAC,KAAD,CAFa;AAAA;AAAA,MAEtCiB,IAFsC;AAAA,MAEhCC,OAFgC;;AAAA,mBAGflB,QAAQ,CAAC,KAAD,CAHO;AAAA;AAAA,MAGtCmB,OAHsC;AAAA,MAG7BC,UAH6B;;AAAA,qBAKjBlB,WAAW,CAACQ,UAAD,EACnC;AAAEW,IAAAA,SAAS,EAAE;AAAEP,MAAAA,EAAE,EAAFA;AAAF,KAAb;AAAqBQ,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAElB;AAAT,KAAD;AAArC,GADmC,CALM;AAAA;AAAA,MAKtCmB,iBALsC;;AAAA,kBAQTrB,QAAQ,CAACQ,cAAD,EACxC;AAAEU,IAAAA,SAAS,EAAE;AAAEP,MAAAA,EAAE,EAAEA;AAAN;AAAb,GADwC,CARC;AAAA,MAQrCW,IARqC,aAQrCA,IARqC;AAAA,MAQtBC,QARsB,aAQ/BP,OAR+B;;AAU7CQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,MAAMI,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AACdT,YAAAA,UAAU,CAAC,IAAD,CAAV;AADc;AAAA,6CAERI,iBAAiB,EAFT;;AAAA;AAGdJ,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAU,YAAAA,eAAe,CAAC,CAACC,cAAF,CAAf;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAMA,SAEI,CAACL,QAAD,GAGQ,0CACI,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMV,UAAU,CAAC,CAACD,QAAF,CAAhB;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,QAAhB;AACI,IAAA,aAAa,EAAC,OADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE,EAAhB;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,CADJ,CADJ,EAmCI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAElB,IAAhB;AACI,IAAA,aAAa,EAAC,OADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEe,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE,EAAhB;AAAoBE,MAAAA,aAAa,EAAE;AAAnC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEP,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,OAAO,GAAG,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAE,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEkB,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,UAAU,EAAE;AAA9B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFV,CADJ,EAMI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAE,mBAAM;AACxBpB,MAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAa,MAAAA,eAAe,CAAC,CAACC,cAAF,CAAf;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKZ,OAAO,GAAG,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAE,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEkB,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,UAAU,EAAE;AAA9B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALV,CANJ,CAFJ,CAJJ,CAnCJ,CAHR,GA4De,IA9DnB;AAiEH,CAlFD;AAoFA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,SAAS,EAAE;AACPQ,IAAAA,UAAU,EAAE,CAACnC,SAAS,CAAC6B,KAAX,GAAmB,CADxB;AAEPA,IAAAA,KAAK,EAAE7B,SAAS,CAAC6B,KAAV,GAAkB,GAFlB;AAGPO,IAAAA,MAAM,EAAEpC,SAAS,CAACoC,MAHX;AAIPC,IAAAA,eAAe,EAAE,iBAJV;AAKPC,IAAAA,UAAU,EAAE,QALL;AAMPC,IAAAA,cAAc,EAAE;AANT;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, TouchableWithoutFeedback, Text,Image } from 'react-native';\r\nimport Modal from 'react-native-modal';\r\nimport { useMutation, useQuery } from 'react-apollo-hooks';\r\nimport { gql } from \"apollo-boost\";\r\nimport { FEED_QUERY } from '../home/Home';\r\nimport constants from \"../../Constants\";\r\nimport { STORY_FRAGMENT } from '../../Fragments';\r\nimport styled from 'styled-components';\r\nimport { Video } from 'expo-av';\r\n\r\nconst HIDE_STORY = gql`\r\n  mutation hideStory(\r\n    $id : String!,\r\n  ) { hideStory(\r\n    id: $id,\r\n    ) \r\n  }\r\n`;\r\n\r\nconst GETSTORY_QUERY = gql`\r\nquery getStories($id: String!)  {\r\n    getStories(id: $id) {\r\n     ...StoryParts\r\n    }\r\n  }\r\n  ${STORY_FRAGMENT}\r\n`;\r\n\r\nconst InputButton = styled.TouchableOpacity`\r\n    background-color:white;\r\n    justifyContent: center\r\n    align-items: center\r\n    height: 40px\r\n    width:100px\r\n    margin-right:5px\r\n    margin-left:5px\r\n    border-radius:5px\r\n    `\r\n\r\nexport default ({ id, visibles, setModalUp }) => {\r\n    //console.log(id)\r\n    const [menu, setMenu] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [hideStoryMutation] = useMutation(HIDE_STORY,\r\n        { variables: { id }, refetchQueries: [{ query: FEED_QUERY }] });\r\n\r\n    const { data, loading: Sloading } = useQuery(GETSTORY_QUERY,\r\n        { variables: { id: id } });\r\n    console.log(data);\r\n    const hideStory = async () => {\r\n        setLoading(true);\r\n        await hideStoryMutation();\r\n        setLoading(false);\r\n        setModalVisible(!isModalVisible);\r\n    }\r\n    return (\r\n\r\n        !Sloading ?\r\n\r\n            (\r\n                <>\r\n                    <TouchableWithoutFeedback onPress={() => setModalUp(!visibles)}>\r\n                        <Modal visible={visibles}\r\n                            animationType=\"slide\"\r\n                        >\r\n                            <View style={styles.modalView} >\r\n                                <View style={{ marginBottom: 10, width: 100 }}>\r\n                                    {/* {data&&data.files.map(file => {\r\n                                        console.log(file);\r\n                                        return file.url.endsWith('jpg') ? (\r\n                                            <Image\r\n                                                style={{ width: constants.width, height: constants.width}}\r\n                                                key={file.id}\r\n                                                source={{ uri: file.url }}\r\n                                            />\r\n                                        ) : (\r\n                                            <Video\r\n                                                source={{ uri: file.url }}\r\n                                                rate={1.0}\r\n                                                volume={1.0}\r\n                                                isMuted={false}\r\n                                                resizeMode=\"cover\"\r\n                                                shouldPlay\r\n                                                isLooping\r\n                                                style={{ width: 300, height: 300 }}\r\n                                            />)\r\n                                            \r\n                                        \r\n                                    })} */}\r\n\r\n                                </View>\r\n                            </View >\r\n                        </Modal >\r\n                    </TouchableWithoutFeedback>\r\n\r\n                    <Modal visible={menu}\r\n                        animationType=\"slide\"\r\n                    // 옵션창\r\n                    >\r\n                        <View style={styles.modalView}>\r\n\r\n                            <View style={{ marginBottom: 10, flexDirection: \"row\" }}>\r\n                                <InputButton onPress={hideStory}>\r\n                                    {loading ? <ActivityIndicator color={\"black\"} />\r\n                                        : <Text style={{ color: \"black\", fontWeight: \"bold\" }}>숨기기</Text>}\r\n                                </InputButton>\r\n\r\n                                <InputButton onPress={() => {\r\n                                    setMenu(!menu);\r\n                                    setModalVisible(!isModalVisible);\r\n                                }}>\r\n                                    {loading ? <ActivityIndicator color={\"black\"} />\r\n                                        : <Text style={{ color: \"black\", fontWeight: \"bold\" }}>취소</Text>}\r\n                                </InputButton>\r\n                            </View>\r\n                        </View >\r\n                    </Modal >\r\n                </>) : null\r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    modalView: {\r\n        marginLeft: -constants.width / 7,\r\n        width: constants.width * 1.2,\r\n        height: constants.height,\r\n        backgroundColor: \"rgba(0,0,0,0.7)\",\r\n        alignItems: \"center\",\r\n        justifyContent: 'center'\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}