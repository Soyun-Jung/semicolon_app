{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\EMBEDED\\\\Final_Project\\\\semicolon_app\\\\navigation\\\\EventNavigation\\\\NavigationPresenter.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query covid19($location:String!) {\\n    covid19(location:$location){\\n      countryName\\n      newCase\\n      }\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query weather($latitude: Float! , $longitude:Float!) {\\n    weather(latitude: $latitude, longitude:$longitude){\\n        temp \\n        weather\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  flex: 1;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-top : -30px;\\n  margin-bottom : -30px;\\n  width: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components/native\";\nimport constants from \"../../constants\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport { gql } from 'apollo-boost';\nimport NavigationView from \"./NavigationView\";\nvar Image = styled.Image(_templateObject(), constants.width / 3);\nvar View = styled.View(_templateObject2());\nvar GET_WEATHER = gql(_templateObject3());\nvar GET_COVID = gql(_templateObject4());\nexport default (function (_ref) {\n  var location = _ref.location;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var _useQuery = useQuery(GET_WEATHER, {\n    variables: {\n      latitude: location.latitude,\n      longitude: location.longitude\n    }\n  }),\n      weatherData = _useQuery.data,\n      weatherLoding = _useQuery.loading;\n\n  var _useQuery2 = useQuery(GET_COVID, {\n    variables: {\n      location: location.region\n    }\n  }),\n      covidData = _useQuery2.data,\n      covidLoading = _useQuery2.loading;\n\n  var saveViews = function saveViews() {\n    if (index === 2) {\n      setTimeout(function () {\n        return setIndex(0);\n      }, 5000);\n    } else {\n      setTimeout(function () {\n        return setIndex(index + 1);\n      }, 5000);\n    }\n  };\n\n  useEffect(function () {\n    saveViews();\n  }, [index]);\n  return covidData && weatherLoding ? React.createElement(Image, {\n    resizeMode: \"contain\",\n    source: require(\"../../assets/logo.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 41\n    }\n  }) : React.createElement(NavigationView, {\n    index: index,\n    countryName: covidData.covid19.countryName,\n    newCase: covidData.covid19.newCase,\n    weather: weatherData.weather.weather,\n    temp: weatherData.weather.temp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  });\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  temp: {\n    fontSize: 17,\n    fontWeight: 'bold',\n    color: \"black\"\n  }\n});","map":{"version":3,"sources":["D:/EMBEDED/Final_Project/semicolon_app/navigation/EventNavigation/NavigationPresenter.js"],"names":["React","useState","useEffect","styled","constants","useQuery","gql","NavigationView","Image","width","View","GET_WEATHER","GET_COVID","location","index","setIndex","variables","latitude","longitude","weatherData","data","weatherLoding","loading","region","covidData","covidLoading","saveViews","setTimeout","require","covid19","countryName","newCase","weather","temp","styles","StyleSheet","create","container","flex","flexDirection","justifyContent","alignItems","fontSize","fontWeight","color"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,cAAP;AAEA,IAAMC,KAAK,GAAGL,MAAM,CAACK,KAAV,oBAGAJ,SAAS,CAACK,KAAV,GAAkB,CAHlB,CAAX;AAMA,IAAMC,IAAI,GAAGP,MAAM,CAACO,IAAV,oBAAV;AAMA,IAAMC,WAAW,GAAGL,GAAH,oBAAjB;AASA,IAAMM,SAAS,GAAGN,GAAH,oBAAf;AAWA,gBAAe,gBAAkB;AAAA,MAAfO,QAAe,QAAfA,QAAe;;AAAA,kBACLZ,QAAQ,CAAC,CAAD,CADH;AAAA;AAAA,MACxBa,KADwB;AAAA,MACjBC,QADiB;;AAAA,kBAGuBV,QAAQ,CAACM,WAAD,EAAc;AAC1EK,IAAAA,SAAS,EAAE;AACTC,MAAAA,QAAQ,EAAEJ,QAAQ,CAACI,QADV;AAETC,MAAAA,SAAS,EAAEL,QAAQ,CAACK;AAFX;AAD+D,GAAd,CAH/B;AAAA,MAGjBC,WAHiB,aAGvBC,IAHuB;AAAA,MAGKC,aAHL,aAGJC,OAHI;;AAAA,mBASoBjB,QAAQ,CAACO,SAAD,EAAY;AACrEI,IAAAA,SAAS,EAAE;AACTH,MAAAA,QAAQ,EAAEA,QAAQ,CAACU;AADV;AAD0D,GAAZ,CAT5B;AAAA,MASjBC,SATiB,cASvBJ,IATuB;AAAA,MASGK,YATH,cASNH,OATM;;AAe/B,MAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAIZ,KAAK,KAAK,CAAd,EAAiB;AACfa,MAAAA,UAAU,CAAC;AAAA,eAAMZ,QAAQ,CAAC,CAAD,CAAd;AAAA,OAAD,EAAoB,IAApB,CAAV;AACD,KAFD,MAEO;AACLY,MAAAA,UAAU,CAAC;AAAA,eAAMZ,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA,OAAD,EAA4B,IAA5B,CAAV;AACD;AACF,GAND;;AAQAZ,EAAAA,SAAS,CAAC,YAAM;AACdwB,IAAAA,SAAS;AACV,GAFQ,EAEP,CAACZ,KAAD,CAFO,CAAT;AAIA,SAAQU,SAAS,IAAIH,aAAb,GAA8B,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAE,SAAnB;AAA8B,IAAA,MAAM,EAAEO,OAAO,yBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,GACA,oBAAE,cAAF;AAAiB,IAAA,KAAK,EAAId,KAA1B;AACE,IAAA,WAAW,EAAKU,SAAS,CAACK,OAAV,CAAkBC,WADpC;AAEE,IAAA,OAAO,EAAKN,SAAS,CAACK,OAAV,CAAkBE,OAFhC;AAGE,IAAA,OAAO,EAAKZ,WAAW,CAACa,OAAZ,CAAoBA,OAHlC;AAIE,IAAA,IAAI,EAAKb,WAAW,CAACa,OAAZ,CAAoBC,IAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR;AAQD,CAnCD;AAqCA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,UAAU,EAAE;AAJH,GADoB;AAO/BR,EAAAA,IAAI,EAAE;AACJS,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAC,MAFP;AAGJC,IAAAA,KAAK,EAAE;AAHH;AAPyB,CAAlB,CAAf","sourcesContent":["import React, { useState , useEffect } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport constants from \"../../constants\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport { gql } from 'apollo-boost';\r\nimport NavigationView from \"./NavigationView\";\r\n\r\nconst Image = styled.Image`\r\n  margin-top : -30px;\r\n  margin-bottom : -30px;\r\n  width: ${constants.width / 3};\r\n`;\r\n\r\nconst View = styled.View`\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nconst GET_WEATHER = gql`\r\n  query weather($latitude: Float! , $longitude:Float!) {\r\n    weather(latitude: $latitude, longitude:$longitude){\r\n        temp \r\n        weather\r\n        }\r\n    }\r\n`;\r\n\r\nconst GET_COVID = gql`\r\n  query covid19($location:String!) {\r\n    covid19(location:$location){\r\n      countryName\r\n      newCase\r\n      }\r\n    }\r\n`;\r\n\r\n\r\n\r\nexport default ({ location }) => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const { data: weatherData, loading: weatherLoding } = useQuery(GET_WEATHER, {\r\n    variables: {\r\n      latitude: location.latitude,\r\n      longitude: location.longitude\r\n    }\r\n  });\r\n  const { data: covidData, loading: covidLoading } = useQuery(GET_COVID, {\r\n    variables: {\r\n      location: location.region\r\n    }\r\n  });\r\n\r\n  const saveViews = () => { \r\n    if (index === 2) {\r\n      setTimeout(() => setIndex(0), 5000);\r\n    } else {\r\n      setTimeout(() => setIndex(index + 1), 5000);\r\n    }\r\n  }\r\n\r\n  useEffect(() => { \r\n    saveViews();\r\n  },[index])\r\n\r\n  return (covidData && weatherLoding ? (<Image resizeMode={\"contain\"} source={require(\"../../assets/logo.png\")} />)\r\n    :     < NavigationView index = {index}\r\n            countryName = { covidData.covid19.countryName }\r\n            newCase = { covidData.covid19.newCase }\r\n            weather = { weatherData.weather.weather }\r\n            temp = { weatherData.weather.temp } />\r\n  \r\n  )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  temp: {\r\n    fontSize: 17,\r\n    fontWeight:'bold',\r\n    color: \"black\"\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}